
  Audio layer
/   Getting Enough Stuff to Test
/     Generate idle events using a timer
/     Build a central registry of AudioStream objects
/     Allow AudioSynth classes to be used as elements
/       Clean up "permanently hidden element" (i.e., audio) code
/       Extract a IMediaElement interface from MovieElement

    Infrastructure
/     Allow AudioStreams to accept int16 *or* floats
/     Stop discarding extra Vorbis data when it doesn't fit in buffer
/     Handle mono
/     Replace test clips with custom clips
/     Volume control
/     Don't run timer unless there's an active stream
/     Fix endianess in libivorbisdec?
      Fix stutter when switching from sine to vorbis clip (portaudio bug?)

    Useful features
/     Looping
      Geiger counters
/       Random synth of low to medium count rates
/       Fix clipping artifacts - not clipping, actually truncation
/       Loops of high count rates
        Hook into Tamale for Geigers
        Hook into Quake for Geigers
      Hook into Quake for ambients
      Stereo panning
      Kill off Quake sound effects when leaving sim card group

    Less Important (Or Even Dubious)
      (WAIT ...) on a Vorbis stream
      Refactor buffering class out of VorbisAudioStream
      Allow Vorbis file loading with wxStream?
      Hook into Tamale for foley - lower priority
      Allow AudioStreams to be mono or stereo?
      Handle 44.1/2^N Vorbis streams?
      We're clipping the last 0.5 seconds or so (actually, I think
        portaudio is), and we should fix this
      Try to get complete code coverage testing Vorbis playback path

  Make TException stop reporting line numbers

/ Allow templates to define parent parameters in terms of their own parameters
/ Can we comine clear-node-(handlers|values) ?
/ binding-func is a bad name
/ template-bind-property-values -> node-bind-property-values!
/ give an error for duplicate properties
/ init-thunk -> init-fn 

  Deletion of elements is a mess.  Fix.
  Allow deletion of CREATE'd elements
  Send idle events to everything
  Returning values from event handlers?
  NODE-HAS-EXPENSIVE-HANDLERS? is currently a bit tricky
  Can we combine node-handlers and node-values?
  Can we combine @ and node-values?
  Rename event handlers to include '-EVENT'
  (event-character e) should return a character
  Loose QUOTE for NAME argument to SEND and PROP

  Not now
    SET-PROP! -- is it what we want?
    Hierarchial property value searching -- is it what we want?

/ Send events to zones
/   Mouse left down
/   Mouse left up
/   Mouse left double-click
/   Mouse enter
/   Mouse leave
/   Mouse grabs
/ Use element templates for everything that creates elements

Older Stuff
-----------

  Object store
    Implement data types
/     Basic value types (string, int, float, point, rect, color)
/     Maps
/     Lists
/     Objects
    Operations
/     Set
/     Insert
/     Delete
      Move
      Copy within and between stores
    Model-View-Controller
      Change-notification system
    Transactions
/   Serialization
/     Serialize basic value types
/     Serialize maps & lists
/     Serialize objects
/   Deserialization
/     Choose an XML parser
/     Deserialize basic value types
/     Deserialize maps & lists
/     Deserialize objects
/   Cleanup
X     Consider using boost::shared_ptr<Datum>
/     Consider renaming DataStore to model
/     Rename some FooDatum classes to Foo
/     Improve the load/save API
    Testing
      Test format version support

  wxRawBitmap stuff
/   Get native wxRawBitmapDC working on Windows
/     Get side-by-side builds of native and generic wxRawBitmapDC
/     Move DC-creation code into wxRawBitmapDC
/     Handle SelectObject properly
/     Write code to test drawing functions
    Minor cleanups
/     Fix misspelling of "licence"->"license" in header block
/     Change copyright dates to include 2003
/     Add WXDLLEXPORT in front of forward class declarations
      Rename 'Stride' to 'Pitch'?
    Integrate into engine
/     Integrate into Win32 engine
      Integrate into Linux engine?

  New PNG loader
    
Long Term
---------

  Source-tree re-organization
    Remove cryptographic code to avoid problems with export law
    Remove Macintosh code with license problems

  wxWindows Port
    Start moving Windows primitives into the wxWindows front-end
    Improve movie-controller event-handling
    Improve full-screen mode on Windows (and Mac?)
    Implement high-speed wxBitmap access
    Test extensively with legacy programs
    Text extensively on different systems
    Write better PNG loader
    Port QuickTime code to wxWindows APIs & fix controller event handling
    Get wxWindows engine running under Carbon
    Get QuickTime working on the MacOS

  Scheme
    Figure out who's creating that "Runtime Error at 0x........" dialog
    Continue to flesh-out 5L APIs

  Stabilization
    Fix 3.4 bugs on the Mac
    Look for other known bugs, prioritize, and fix
    Testing

  Big Stuff
    Section 508
,   Quake II
    Field-customizability
    SCORM and/or mainstream LMS software
    Content security
    GUI editing tools for content authors, graphic artists

Notes
-----

  To build Linux wxWindows, configure as:

    $ CC=gcc-3.0 CXX=g++-3.0 ./configure --disable-shared
